// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PupBnB.EFDataAccess;

namespace PupBnB.EFDataAccess.Migrations
{
    [DbContext(typeof(PupBnBDbContext))]
    partial class PupBnBDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.AppointmentsModel", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("DogId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("UserId");

                    b.HasKey("AppointmentId");

                    b.HasIndex("DogId");

                    b.HasIndex("UserId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.Breeds", b =>
                {
                    b.Property<int>("BreedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BreedName");

                    b.HasKey("BreedId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.Dogs", b =>
                {
                    b.Property<int>("DogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int>("BreedId");

                    b.Property<string>("Description");

                    b.Property<int>("GenderId");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("DogId");

                    b.HasIndex("BreedId");

                    b.HasIndex("GenderId");

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.DonateModel", b =>
                {
                    b.Property<Guid>("DonationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<int>("CardNumber");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("UserId");

                    b.HasKey("DonationId");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.Genders", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.Person", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("UserId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.VolunteerModel", b =>
                {
                    b.Property<Guid>("VolunteerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("VolunteerId");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.AppointmentsModel", b =>
                {
                    b.HasOne("PupBnB.ApplicationLogic.DataModel.Dogs", "Dog")
                        .WithMany("Appointments")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PupBnB.ApplicationLogic.DataModel.Person", "Person")
                        .WithMany("Appointments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.Dogs", b =>
                {
                    b.HasOne("PupBnB.ApplicationLogic.DataModel.Breeds", "Breeds")
                        .WithMany("Dogs")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PupBnB.ApplicationLogic.DataModel.Genders", "Genders")
                        .WithMany("Dogs")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PupBnB.ApplicationLogic.DataModel.DonateModel", b =>
                {
                    b.HasOne("PupBnB.ApplicationLogic.DataModel.Person", "Person")
                        .WithMany("Donations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
